apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.google.gms.google-services'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion project.properties.app_compileSdkVersion as int
    buildToolsVersion project.properties.app_buildToolsVersion

    defaultConfig {
        applicationId project.properties.app_applicationId
        minSdkVersion project.properties.app_minSdkVersion as int
        targetSdkVersion app_targetSdkVersion as int
        versionCode app_versionCode as int
        versionName app_versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "youtubeApiKey", "\"$CUER_YOUTUBE_API_KEY\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    viewBinding {
        enabled = true
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

//    packagingOptions {
//        exclude 'META-INF/AL2.0'
//        exclude 'META-INF/LGPL2.1'
//    }
}

dependencies {
    // project
    implementation project(":domain")
    implementation project(":core")
    implementation project(":net")
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // deps
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$ver_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$ver_kotlinx_serialization_runtime"
    implementation "androidx.appcompat:appcompat:$ver_appcompat"
    implementation "androidx.core:core:$ver_androidx_core"
    implementation "androidx.core:core-ktx:$ver_androidx_core"
    implementation "androidx.annotation:annotation:$ver_androidx_annotation"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$ver_lifecycle_viewmodel_ktx"
    implementation "com.google.android.material:material:$ver_material"
    implementation "androidx.constraintlayout:constraintlayout:$ver_constraintlayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$ver_lifecycle_extensions"

    implementation "androidx.recyclerview:recyclerview:$ver_recyclerview"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$ver_recyclerview"

    implementation "com.jakewharton:process-phoenix:$ver_process_phoenix" // todo remove this with connectin monitor
    implementation "androidx.preference:preference-ktx:$ver_preference"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$ver_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$ver_navigation"
    implementation "androidx.navigation:navigation-fragment:$ver_navigation"
    implementation "androidx.navigation:navigation-ui:$ver_navigation"

    // koin
    implementation "org.koin:koin-core:$ver_koin"
    implementation "org.koin:koin-androidx-scope:$ver_koin"
    implementation "org.koin:koin-android-viewmodel:$ver_koin"

    // room
    implementation "androidx.room:room-runtime:$ver_room"
    kapt "androidx.room:room-compiler:$ver_room"
    implementation "androidx.room:room-ktx:$ver_room"

    // debug
    implementation "com.facebook.stetho:stetho:$ver_stetho"
    implementation "com.facebook.stetho:stetho-okhttp3:$ver_stetho"

    // cc sender
    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender:$ver_chromecast_sender"
    // this is not needed to use the library, but it provides the very useful MediaRouteButton.
    implementation "androidx.mediarouter:mediarouter:$ver_mediarouter"

    implementation "androidx.media:media:$ver_androidx_media"

    // FIREBASE
    // Import the BoM for the Firebase platform
    implementation platform("com.google.firebase:firebase-bom:$ver_firebase_bom")
    // Declare the dependency for the Cloud Storage library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "com.firebaseui:firebase-ui-storage:$ver_firebase_ui"

    implementation "com.github.bumptech.glide:glide:$ver_glide"// todo extract version
    annotationProcessor "com.github.bumptech.glide:compiler:$ver_glide"
    kapt "com.github.bumptech.glide:compiler:$ver_glide"

    testImplementation "junit:junit:$ver_junit"
    testImplementation "org.koin:koin-test:$ver_koin"
    testImplementation "io.mockk:mockk:$ver_mockk"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: ver_hamcrest
    testImplementation "com.flextrade.jfixture:jfixture:$ver_jfixture"
    testImplementation "androidx.room:room-testing:$ver_room"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$ver_kotlinx_coroutines_test"
    testImplementation "org.robolectric:robolectric:$ver_robolectric"
    testImplementation "androidx.test:core:$ver_androidx_test"
    testImplementation "androidx.test:runner:$ver_androidx_test"
    testImplementation "androidx.test:rules:$ver_androidx_test"
    testImplementation "android.arch.core:core-testing:$ver_android_arch_test"

    androidTestImplementation "androidx.test.ext:junit:$ver_androidx_test_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$ver_espresso_core"
    androidTestImplementation "org.koin:koin-test:$ver_koin"
    androidTestImplementation "io.mockk:mockk:$ver_mockk"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: ver_hamcrest
    androidTestImplementation "com.flextrade.jfixture:jfixture:$ver_jfixture"
    androidTestImplementation "androidx.test:core:$ver_androidx_test"
    androidTestImplementation "androidx.test:runner:$ver_androidx_test"
    androidTestImplementation "androidx.test:rules:$ver_androidx_test"

}
