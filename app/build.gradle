apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext {
    ver_core_ktx='1.2.0'
    ver_material='1.1.0'
    ver_constraintlayout='1.1.3'
    ver_lifecycle_extensions='2.2.0'
    ver_room = '2.2.5'
    ver_navigation = '2.2.2'
    ver_koin = '2.1.4'
    ver_chromecast_sender='0.23'
    ver_mediarouter='1.1.0'
    ver_appcompat='1.1.0'

    ver_junit='4.12'
    ver_mockk='1.9.3'
    ver_jfixture='2.7.2'

    ver_androidx_test_junit='1.1.1'
    ver_espresso_core='3.2.0'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "uk.co.sentinelweb.cuer.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    viewBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$ver_kotlin"
    implementation "androidx.appcompat:appcompat:$ver_appcompat"
    implementation "androidx.core:core-ktx:$ver_core_ktx"
    implementation "com.google.android.material:material:$ver_material"
    implementation "androidx.constraintlayout:constraintlayout:$ver_constraintlayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$ver_lifecycle_extensions"
    implementation "androidx.navigation:navigation-fragment-ktx:$ver_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$ver_navigation"
    implementation "androidx.navigation:navigation-fragment:$ver_navigation"
    implementation "androidx.navigation:navigation-ui:$ver_navigation"

    implementation  "org.koin:koin-core:$ver_koin"
    implementation "org.koin:koin-androidx-scope:$ver_koin"
    implementation  "org.koin:koin-android-viewmodel:$ver_koin"

    implementation "androidx.room:room-runtime:$ver_room"
    annotationProcessor "androidx.room:room-compiler:$ver_room" // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$ver_room"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$ver_room"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$ver_room"
    // Test helpers
    testImplementation "androidx.room:room-testing:$ver_room"


    // cc sender
    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender:$ver_chromecast_sender"
    // this is not needed to use the library, but it provides the very useful MediaRouteButton.
    implementation "androidx.mediarouter:mediarouter:$ver_mediarouter"

    testImplementation "junit:junit:$ver_junit"
    testImplementation "org.koin:koin-test:$ver_koin"
    testImplementation "io.mockk:mockk:$ver_mockk"
    testImplementation "com.flextrade.jfixture:jfixture:$ver_jfixture"

    androidTestImplementation "androidx.test.ext:junit:$ver_androidx_test_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$ver_espresso_core"

}
